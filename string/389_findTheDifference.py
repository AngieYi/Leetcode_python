'''
389. Find the Difference
Given two strings s and t which consist of only lowercase letters.
String t is generated by random shuffling string s and then add one more letter at a random position.
Find the letter that was added in t.
Example:
Input:
s = "abcd"
t = "abcde"
Output:
e
Explanation:
'e' is the letter that was added.
'''

class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """

        # 42ms: ord and chr
        diff = 0
        for i in range(len(s)): # first -,then +
            diff -= ord(s[i])   # ord(x): Converts a single character to its integer value.
            diff += ord(t[i])
        diff += ord(t[-1])      # after add the final, diff is positive
        return chr(diff)        # chr(x): Converts an integer to a character.


        # 52ms ^XOR,ord and chr
        code = 0
        for ch in s + t:        # ord(x): Converts a single character to its integer value.
            code ^= ord(ch)     # 0^ch=ch, ch^ch=0, the rest is the final result
        return chr(code)        # chr(x): Converts an integer to a character.


        # 66ms: dictionary
        # dict.get(key, default=None), default is the Value to be returned in case key does not exist.
        dic = {}
        for ch in s:
            dic[ch] = dic.get(ch, 0) + 1  # record all the character in dic
        for ch in t:
            if dic.get(ch, 0) == 0:       # if this char did not exist or no more exists
                return ch
            else:
                dic[ch] -= 1


        # 82ms: collections.Counter
        from collections import Counter
        return (Counter(t)-Counter(s)).popitem()[0]
        '''
        what is Counter?
        https://docs.python.org/2/library/collections.html#collections.Counter
        >>> from collections import Counter
        >>> x = "abcde"
        >>> y = "abc"
        >>> Counter(x)-Counter(y)
            Counter({'e': 1, 'd': 1})
        >>> (Counter(x)-Counter(y))
            Counter({'e': 1, 'd': 1})
        >>> (Counter(x)-Counter(y)).popitem()
            ('e', 1)
        >>> (Counter(x)-Counter(y)).popitem()[0]
            'e'
        '''

        # 92ms: list remove
        li_t = list(t)
        for x in s:
            li_t.remove(x)
        return ''.join(li_t)    # convert list to string


        '''
        wrong solution: filter or replace, if duplicates, could not pass s="a",t="aa"

        1.
        return filter(lambda x: x not in s,t)

        2.
        for x in s:
            t = t.replace(x,"")
        return t

        '''